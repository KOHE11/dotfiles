{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
    // }

    "for_i": {
        "prefix": "fori",
        "body": [
            "for (int i = 0; i < n; i++) {",
            "\t$1",
            "}"
        ]
    },

    "for_j": {
        "prefix": "forj",
        "body": [
            "for (int j = 0; j < n; j++) {",
            "\t$1",
            "}"
        ]
    },

    "for_k": {
        "prefix": "fork",
        "body": [
            "for (int k = 0; k < n; k++) {",
            "\t$1",
            "}"
        ]
    },

    "assert": {
        "prefix": "ase",
        "body": [
            "assert($1 == $2);"
        ]
    },

    "func": {
        "prefix": "fun",
        "body": [
            "printf(\"Sucess: %s\\n\", __func__);"
        ]
    }
}
